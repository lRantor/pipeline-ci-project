name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 1. Análisis de calidad del código
  analyze-code:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npx eslint . --max-warnings=0

  # 2. Pruebas unitarias e integración
  test:
    runs-on: ubuntu-latest
    needs: analyze-code
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  # 3. Compilación y generación de artefactos
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

  # 4. Despliegue y monitorización
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to remote server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          command: |
            docker stop my-app || true
            docker rm my-app || true
            docker pull ghcr.io/${{ github.repository }}:latest
            docker run -d -p 3000:3000 --name my-app ghcr.io/${{ github.repository }}:latest
      - name: Monitor deployment
        run: |
          curl -f http://your-deployment-url:3000/health || exit 1
